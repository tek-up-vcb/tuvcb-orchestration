services:
  consul:
    image: consul:1.15.4
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
    networks:
      - net

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tuvcb_main
      POSTGRES_USER: tuvcb_user
      POSTGRES_PASSWORD: tuvcb_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d:ro
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tuvcb_user -d tuvcb_main"]
      interval: 10s
      timeout: 5s
      retries: 5

  traefik:
    image: traefik:v2.11
    depends_on:
      - consul
    ports:
      - "80:80"      # HTTP
      - "8080:8080"  # Dashboard
      - "443:443"    # HTTPS
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - //var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - traefik_logs:/var/log/traefik
    networks:
      - net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"

  # Stack de monitoring
  monitoring-hub:
    build: ./monitoring-hub
    ports:
      - "3004:3000"
    networks:
      - net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.monitoring-hub.rule=Host(`monitoring.localhost`)"
      - "traefik.http.services.monitoring-hub.loadbalancer.server.port=3000"

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://monitoring.localhost/prometheus'
    networks:
      - net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`monitoring.localhost`) && PathPrefix(`/prometheus`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=http://monitoring.localhost/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    networks:
      - net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`monitoring.localhost`) && PathPrefix(`/grafana`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - net

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - net

  tuvcb-front:
    build: ./tuvcb-front
    ports:
      - "5173:5173"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`app.localhost`)"
      - "traefik.http.routers.front.priority=1000"
      - "traefik.http.services.front.loadbalancer.server.port=5173"
    depends_on:
      - traefik
    networks:
      - net
    environment:
      - SERVICE_NAME=tuvcb-front

  tuvcb-service-users:
    build:
      context: ./tuvcb-service-users
    environment:
      - SERVICE_NAME=tuvcb-service-users
      - PORT=3002
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=tuvcb_user
      - DB_PASSWORD=tuvcb_password
      - DB_DATABASE=tuvcb_main
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
      traefik:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tuvcb-service-users.rule=Host(`app.localhost`) && (PathPrefix(`/api/users`) || PathPrefix(`/api/students`) || PathPrefix(`/api/promotions`))"
      - "traefik.http.routers.tuvcb-service-users.priority=3000"
      - "traefik.http.services.tuvcb-service-users.loadbalancer.server.port=3002"
      - "traefik.http.routers.tuvcb-service-users.middlewares=cors@file"

  tuvcb-service-auth:
    build:
      context: ./tuvcb-service-auth
    environment:
      - SERVICE_NAME=tuvcb-service-auth
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - PORT=3001
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=tuvcb_user
      - DB_PASSWORD=tuvcb_password
      - DB_DATABASE=tuvcb_main
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
      traefik:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tuvcb-service-auth.rule=Host(`app.localhost`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.tuvcb-service-auth.priority=3000"
      - "traefik.http.services.tuvcb-service-auth.loadbalancer.server.port=3001"
      - "traefik.http.routers.tuvcb-service-auth.middlewares=strip-api@file,cors@file"

  tuvcb-service-test:
    build:
      context: ./tuvcb-service-test
    environment:
      - SERVICE_NAME=tuvcb-service-test
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    networks:
      - net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tuvcb-service-test.rule=Host(`app.localhost`) && PathPrefix(`/api/test`)"
      - "traefik.http.services.tuvcb-service-test.loadbalancer.server.port=3000"
      - "traefik.http.routers.tuvcb-service-test.middlewares=strip-api@file,cors@file"

  tuvcb-service-diploma:
    build:
      context: ./tuvcb-service-diploma
    environment:
      - SERVICE_NAME=tuvcb-service-diploma
      - PORT=3003
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=tuvcb_user
      - DB_PASSWORD=tuvcb_password
      - DB_DATABASE=tuvcb_main
    networks:
      - net
    depends_on:
      postgres:
        condition: service_healthy
      traefik:
        condition: service_started
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tuvcb-service-diploma.rule=Host(`app.localhost`) && PathPrefix(`/api/diplomas`)"
      - "traefik.http.routers.tuvcb-service-diploma.priority=3000"
      - "traefik.http.services.tuvcb-service-diploma.loadbalancer.server.port=3003"
      - "traefik.http.routers.tuvcb-service-diploma.middlewares=strip-api@file,cors@file"

volumes: 
  postgres_data:
  prometheus_data:
  grafana_data:
  traefik_logs:

networks:
  net:
    driver: bridge

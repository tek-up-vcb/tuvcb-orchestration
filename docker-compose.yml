services:
  consul:
    image: consul:1.15.4
    command: agent -dev -client=0.0.0.0
    ports:
      - "8500:8500"
    networks:
      - net

  traefik:
    image: traefik:v2.11
    depends_on:
      - consul
    ports:
      - "80:80"      # HTTP
      - "8080:8080"  # Dashboard
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - //var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
    networks:
      - net

  tuvcb-front:
    build: ./tuvcb-front
    ports:
      - "5173:5173"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.rule=Host(`app.localhost`)"
      - "traefik.http.services.front.loadbalancer.server.port=5173"
    depends_on:
      - traefik
    networks:
      - net
    environment:
      - SERVICE_NAME=tuvcb-front

  tuvcb-service-auth:
    build:
      context: ./tuvcb-service-auth
    environment:
      - SERVICE_NAME=tuvcb-service-auth
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_EXPIRES_IN=24h
      - PORT=3001
      - NODE_ENV=development
      - ALLOWED_USER=0xD498fd6BCd7D152319a3e822b83a9610710655eC
    networks:
      - net
    depends_on:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tuvcb-service-auth.rule=Host(`app.localhost`) && PathPrefix(`/api/auth`)"
      - "traefik.http.services.tuvcb-service-auth.loadbalancer.server.port=3001"
      - "traefik.http.routers.tuvcb-service-auth.middlewares=strip-api@file,cors@file"

  tuvcb-service-test:
    build:
      context: ./tuvcb-service-test
    environment:
      - SERVICE_NAME=tuvcb-service-test
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    networks:
      - net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tuvcb-service-test.rule=Host(`app.localhost`) && PathPrefix(`/api/test`)"
      - "traefik.http.services.tuvcb-service-test.loadbalancer.server.port=3000"
      - "traefik.http.routers.tuvcb-service-test.middlewares=strip-api@file,cors@file"

volumes: {}

networks:
  net:
    driver: bridge
